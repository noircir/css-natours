/* Normalization setting */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /*  Box-sizing generally will be "border-box" (inherited from 'body')
    but sometimes different plugins will use different box sizing, so 
    for their sake here we'll write 'inherit' */
  box-sizing: inherit; }

html {
  /* Instead of an absolute font size (10px), let's write a percentage 
    of the user's default browser size. 62.55 of 16px = 10px. */
  font-size: 62.5%; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

.header {
  height: 95vh;
  background-image: url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem; }

.header__logo {
  height: 3.5rem; }

/* 
.logo:hover {
    animation: moveFromRight 1s ease-out;
} */
.header__text-box {
  position: absolute;
  /*  top and left are in relation to parent element */
  top: 40%;
  left: 50%;
  /* Translate relates to the shape itself: 
    move 50% of its own X size to the left, and Y size up. */
  transform: translate(-50%, -50%);
  text-align: center;
  /* To stop slight shake at the end of animation */
  backface-visibility: hidden; }

.heading-primary {
  color: white;
  text-transform: uppercase;
  /* To stop slight shake at the end of animation */
  backface-visibility: hidden;
  margin-bottom: 6rem; }

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveFromLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation-iteration-count: 3; */
  /* animation-delay: 2s; */ }

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveFromRight 1s ease-out;
  /* animation-name: moveFromRight;
    animation-duration: 2s;
    animation-timing-function: ease-out; */
  /* animation-delay: 2s; */ }

@keyframes moveFromLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveFromRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveButtonUp {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  /* 
    80% {
        transform: translateY(1rem);
    } */
  100% {
    opacity: 1;
    transform: translate(0); } }

/* btn:link is just the button inside the <a> tag. */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  /* To make the btn::after position related to this button */
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.5); }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.5); }

.btn--white {
  background-color: #fff;
  color: #777; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  /*  The transition property to be put on the initial state  */
  transition: all .4s; }

.btn--white::after {
  background-color: #fff; }

.btn--white:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  /* Transitioning to zero opacity trick */
  opacity: 0; }

.btn--animated {
  animation: moveButtonUp 1s ease-out .75s;
  /* Applies the style to the target before the animation starts
     (state at 0% should be invisible, opacity = 0) */
  animation-fill-mode: backwards; }
